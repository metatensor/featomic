
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/per-pair-equivariant-features.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_per-pair-equivariant-features.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_per-pair-equivariant-features.py:


Computing per-pair equivariant features
=======================================

.. start-body

.. GENERATED FROM PYTHON SOURCE LINES 7-15

.. code-block:: Python


    import chemfiles
    from metatensor import Labels

    from featomic import SphericalExpansion, SphericalExpansionByPair
    from featomic.clebsch_gordan import EquivariantPowerSpectrumByPair









.. GENERATED FROM PYTHON SOURCE LINES 16-20

Let's see how to compute the per-pair :math:`\lambda`-SOAP descriptor using Featomic.

Read systems using Chemfiles. You can download the dataset for this example from our
:download:`website <../../static/dataset.xyz>`.

.. GENERATED FROM PYTHON SOURCE LINES 21-25

.. code-block:: Python


    with chemfiles.Trajectory("dataset.xyz") as trajectory:
        systems = [s for s in trajectory]








.. GENERATED FROM PYTHON SOURCE LINES 26-31

Featomic also handles systems read by `ASE <https://wiki.fysik.dtu.dk/ase/>`_:

``systems = ase.io.read("dataset.xyz", ":")``.

Next, define the hyperparameters for the spherical expansion:

.. GENERATED FROM PYTHON SOURCE LINES 32-49

.. code-block:: Python


    HYPERPARAMETERS = {
        "cutoff": {
            "radius": 5.0,
            "smoothing": {"type": "ShiftedCosine", "width": 0.5},
        },
        "density": {
            "type": "Gaussian",
            "width": 0.3,
        },
        "basis": {
            "type": "TensorProduct",
            "max_angular": 2,
            "radial": {"type": "Gto", "max_radial": 2},
        },
    }








.. GENERATED FROM PYTHON SOURCE LINES 50-55

Create a spherical expansion and a spherical expansion by pair calculator.
The :class:`~featomic.SphericalExpansion` and
:class:`~featomic.SphericalExpansionByPair` classes use the hyperparameters above.
Then, wrap them with :class:`~featomic.clebsch_gordan.EquivariantPowerSpectrumByPair`
to compute the Clebsch-Gordan contraction for the per-pair :math:`\lambda`-SOAP.

.. GENERATED FROM PYTHON SOURCE LINES 55-60

.. code-block:: Python


    spex_calculator = SphericalExpansion(**HYPERPARAMETERS)
    per_pair_spex_calculator = SphericalExpansionByPair(**HYPERPARAMETERS)
    calculator = EquivariantPowerSpectrumByPair(spex_calculator, per_pair_spex_calculator)








.. GENERATED FROM PYTHON SOURCE LINES 61-62

Run the actual calculation

.. GENERATED FROM PYTHON SOURCE LINES 62-65

.. code-block:: Python


    per_pair_power_spectrum = calculator.compute(systems, neighbors_to_properties=True)








.. GENERATED FROM PYTHON SOURCE LINES 66-68

The result is a :class:`~metatensor.TensorMap` whose keys encode symmetry and the
species of the atoms involved:

.. GENERATED FROM PYTHON SOURCE LINES 68-71

.. code-block:: Python


    per_pair_power_spectrum.keys





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    Labels(
        o3_lambda  o3_sigma  first_atom_type  second_atom_type
            0         1             1                1
            1         1             1                1
            2         1             1                1
            0         1             1                6
            1         1             1                6
            2         1             1                6
            0         1             1                7
            1         1             1                7
            2         1             1                7
            0         1             1                8
            1         1             1                8
            2         1             1                8
            1         -1            1                1
            2         -1            1                1
            3         1             1                1
            1         -1            1                6
            2         -1            1                6
            3         1             1                6
            1         -1            1                7
            2         -1            1                7
            3         1             1                7
            1         -1            1                8
            2         -1            1                8
            3         1             1                8
            3         -1            1                1
            4         1             1                1
            3         -1            1                6
            4         1             1                6
            3         -1            1                7
            4         1             1                7
            3         -1            1                8
            4         1             1                8
            0         1             6                1
            1         1             6                1
            2         1             6                1
            0         1             6                6
            1         1             6                6
            2         1             6                6
            0         1             6                7
            1         1             6                7
            2         1             6                7
            0         1             6                8
            1         1             6                8
            2         1             6                8
            1         -1            6                1
            2         -1            6                1
            3         1             6                1
            1         -1            6                6
            2         -1            6                6
            3         1             6                6
            1         -1            6                7
            2         -1            6                7
            3         1             6                7
            1         -1            6                8
            2         -1            6                8
            3         1             6                8
            3         -1            6                1
            4         1             6                1
            3         -1            6                6
            4         1             6                6
            3         -1            6                7
            4         1             6                7
            3         -1            6                8
            4         1             6                8
            0         1             7                1
            1         1             7                1
            2         1             7                1
            0         1             7                6
            1         1             7                6
            2         1             7                6
            0         1             7                7
            1         1             7                7
            2         1             7                7
            0         1             7                8
            1         1             7                8
            2         1             7                8
            1         -1            7                1
            2         -1            7                1
            3         1             7                1
            1         -1            7                6
            2         -1            7                6
            3         1             7                6
            1         -1            7                7
            2         -1            7                7
            3         1             7                7
            1         -1            7                8
            2         -1            7                8
            3         1             7                8
            3         -1            7                1
            4         1             7                1
            3         -1            7                6
            4         1             7                6
            3         -1            7                7
            4         1             7                7
            3         -1            7                8
            4         1             7                8
            0         1             8                1
            1         1             8                1
            2         1             8                1
            0         1             8                6
            1         1             8                6
            2         1             8                6
            0         1             8                7
            1         1             8                7
            2         1             8                7
            0         1             8                8
            1         1             8                8
            2         1             8                8
            1         -1            8                1
            2         -1            8                1
            3         1             8                1
            1         -1            8                6
            2         -1            8                6
            3         1             8                6
            1         -1            8                7
            2         -1            8                7
            3         1             8                7
            1         -1            8                8
            2         -1            8                8
            3         1             8                8
            3         -1            8                1
            4         1             8                1
            3         -1            8                6
            4         1             8                6
            3         -1            8                7
            4         1             8                7
            3         -1            8                8
            4         1             8                8
    )



.. GENERATED FROM PYTHON SOURCE LINES 72-76

Often, you only need specific :math:`\lambda` values. For example, if the
`target property is the Hamiltonian matrix on a minimal basis
<https://tinyurl.com/ham-mat>`_, you can restrict the output to :math:`\lambda` values
up to :math:`\lambda=2` using the ``selected_keys`` parameter:

.. GENERATED FROM PYTHON SOURCE LINES 76-84

.. code-block:: Python


    per_pair_power_spectrum_minimal_basis = calculator.compute(
        systems,
        neighbors_to_properties=True,
        selected_keys=Labels.range("o3_lambda", 3),
    )
    per_pair_power_spectrum_minimal_basis.keys





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    Labels(
        o3_lambda  o3_sigma  first_atom_type  second_atom_type
            0         1             1                1
            1         1             1                1
            2         1             1                1
            0         1             1                6
            1         1             1                6
            2         1             1                6
            0         1             1                7
            1         1             1                7
            2         1             1                7
            0         1             1                8
            1         1             1                8
            2         1             1                8
            1         -1            1                1
            2         -1            1                1
            1         -1            1                6
            2         -1            1                6
            1         -1            1                7
            2         -1            1                7
            1         -1            1                8
            2         -1            1                8
            0         1             6                1
            1         1             6                1
            2         1             6                1
            0         1             6                6
            1         1             6                6
            2         1             6                6
            0         1             6                7
            1         1             6                7
            2         1             6                7
            0         1             6                8
            1         1             6                8
            2         1             6                8
            1         -1            6                1
            2         -1            6                1
            1         -1            6                6
            2         -1            6                6
            1         -1            6                7
            2         -1            6                7
            1         -1            6                8
            2         -1            6                8
            0         1             7                1
            1         1             7                1
            2         1             7                1
            0         1             7                6
            1         1             7                6
            2         1             7                6
            0         1             7                7
            1         1             7                7
            2         1             7                7
            0         1             7                8
            1         1             7                8
            2         1             7                8
            1         -1            7                1
            2         -1            7                1
            1         -1            7                6
            2         -1            7                6
            1         -1            7                7
            2         -1            7                7
            1         -1            7                8
            2         -1            7                8
            0         1             8                1
            1         1             8                1
            2         1             8                1
            0         1             8                6
            1         1             8                6
            2         1             8                6
            0         1             8                7
            1         1             8                7
            2         1             8                7
            0         1             8                8
            1         1             8                8
            2         1             8                8
            1         -1            8                1
            2         -1            8                1
            1         -1            8                6
            2         -1            8                6
            1         -1            8                7
            2         -1            8                7
            1         -1            8                8
            2         -1            8                8
    )



.. GENERATED FROM PYTHON SOURCE LINES 85-86

.. end-body


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 6.097 seconds)


.. _sphx_glr_download_examples_per-pair-equivariant-features.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: per-pair-equivariant-features.ipynb <per-pair-equivariant-features.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: per-pair-equivariant-features.py <per-pair-equivariant-features.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: per-pair-equivariant-features.zip <per-pair-equivariant-features.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
